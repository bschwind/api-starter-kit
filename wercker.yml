# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box:
  id: phusion/baseimage
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # A step that executes `npm install` command
    # - npm-install
    # # A step that executes `npm test` command
    # - npm-test

    # # A custom script step, name value is used in the UI
    # # and the code value contains the command that get executed
    - script:
        name: Dummy build step
        code: |
          echo 'Building...'

deploy:
  steps:
    - script:
        name: Install Ansible and Terraform
        code: |
          sudo apt-get update
          sudo apt-get install -y ansible
          sudo apt-get install -y git

          # Set up TerraForm
          sudo apt-get install -y wget
          sudo apt-get install -y unzip
          wget https://dl.bintray.com/mitchellh/terraform/terraform_0.6.3_linux_amd64.zip
          mkdir tform
          mv terraform_0.6.3_linux_amd64.zip ./tform
          unzip ./tform/terraform_0.6.3_linux_amd64.zip -d ./tform/
          export PATH=${PWD}/tform/:$PATH

          # Make sure TerraForm and Ansible are good
          terraform --version
          ansible --version

    - add-ssh-key:
      keyname: GITHUB_DEPLOY_KEY

    - script:
        name: Run Terraform
        code: |
          terraform apply \
                    -var "access_key=$AWS_ACCESS_KEY" \
                    -var "secret_key=$AWS_SECRET_KEY" \
                    -var "s3_bucket=$AWS_S3_BUCKET"
          ./deploy/updateTerraformState.sh

    - script:
        name: Get EC2 DNS
        code: |
          export INSTANCE_DNS=`terraform output dns`

    - add-to-known_hosts:
        hostname: $INSTANCE_DNS
    - mktemp:
        envvar: PRIVATEKEY_PATH
    - create-file:
        name: Write key
        filename: $PRIVATEKEY_PATH
        content: $AWS_SSH_PEM_FILE
        hide-from-log: true
        overwrite: true
    - script:
        name: Create /etc/ansible
        code: |
          sudo mkdir -p /etc/ansible
          sudo chmod 777 /etc/ansible
    - create-file:
        name: create host file for ansible
        filename: /etc/ansible/hosts
        content: $INSTANCE_DNS
        overwrite: true

    - script:
        name: run ansible
        code: |
          chmod 400 $PRIVATEKEY_PATH
          ansible-playbook provision.yml --user=ubuntu --private-key=$PRIVATEKEY_PATH --extra-vars "key=value"
