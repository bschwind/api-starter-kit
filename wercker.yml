# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box:
  id: phusion/baseimage
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongodb
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # A step that executes `npm install` command
    # - npm-install
    # # A step that executes `npm test` command
    # - npm-test

    # # A custom script step, name value is used in the UI
    # # and the code value contains the command that get executed
    - script:
        name: Show apt-get version
        code: |
          sudo apt-get --version
          sudo apt-get install -y ansible

          # Set up TerraForm
          sudo apt-get install -y wget
          wget https://dl.bintray.com/mitchellh/terraform/terraform_0.6.3_linux_amd64.zip
          mkdir tform
          mv terraform_0.6.3_linux_amd64.zip ./tform
          unzip ./tform/terraform_0.6.3_linux_amd64.zip
          export PATH=`pwd`/tform/:$PATH

          # Make sure TerraForm and Ansible are good
          terraform --version
          ansible --version

deploy:
  steps:
    - script:
      name: Echo environment variables
      code: |
        env
        terraform --version
        ansible --version
